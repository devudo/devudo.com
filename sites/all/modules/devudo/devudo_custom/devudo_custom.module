<?php
/**
 *
 */

/**
 * Implements hook_menu_alter()
 */
function devudo_custom_menu(){
  $items['home'] = array(
    'title' => 'Log in',
    'access callback' => 'user_is_anonymous',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  return $items;
}


/**
 * Implements hook_menu_alter()
 */
function devudo_custom_menu_alter(&$items){

  // Make our own user pages
  $items['login'] = $items['user'];
  $items['logout'] = $items['user/logout'];
  //$items['signup'] = $items['user/register'];
  $items['password'] = $items['user/password'];
 
  // Set them all as callbacks.
  $items['login']['type'] = $items['signup']['type'] = $items['password']['type'] = MENU_CALLBACK;
 
  // Unset Drupal pages
  $items['user/login'] =
  $items['user/logout'] =
  $items['user/password'] =
  $items['user'] =
    array();
 
  // Create Account
  $items['user/register']['title'] = 'Create Account';
    
  // Change tab names for users
  $items['user/%user/view']['title'] = t('Profile');
  $items['user/%user/edit']['title'] = t('Settings');

  
}

/**
 * Implements form_alter()
 */
function devudo_custom_form_alter(&$form, &$form_state, $form_id) {

  //drupal_set_message($form_id);
  if ($form_id == 'user_login'){
    
    drupal_set_title(t('Welcome to Devudo'));
    
    // Set placeholders
    $form['name']['#placeholder'] = $form['name']['#title'];
    $form['pass']['#placeholder'] = $form['pass']['#title'];
    
    // Hide Titles
    $form['name']['#title'] = $form['pass']['#title'] = NULL;
    
    // Remove Descriptions
    $form['name']['#description'] = $form['pass']['#description'] = NULL;

  }
  
  // Don't let users add servers if we don't have the ssh key ready
  if ($form_id == 'server_node_form') {
    $pubkey = variable_get('shopmaster_ssh_public_key', '');
    if (!$pubkey){
      drupal_set_message(t("We're sorry, we cannot allow server creation at this time.  Please try again later."), 'error');
      drupal_goto('<front>');
    }
  }
}

/**
 * Implements hook_block_view_alter()
 */
function devudo_custom_block_view_alter(&$data, $block){
  if ($block->module == 'connector'){
    $data['subject'] = t('or');
  }
}

function devudo_custom_requirements($phase) {
  $requirements = array();

  if ($phase == 'runtime') {
    $pubkey = variable_get('shopmaster_ssh_public_key', '');
    
    $requirements['devudo_shopmaster'] = array(
      'title' => 'Public SSH Key',
      'value' => "<textarea>$pubkey</textarea>",
      'description' => "This server's Public Key needs to be saved as a variable.  ",
    );
    
    if (!$pubkey) {
      $requirements['devudo_shopmaster']['description'] .= "Run <code>drush vset shopmaster_ssh_public_key \"$(cat ~/.ssh/id_rsa.pub)\" --yes</code>";
      $requirements['devudo_shopmaster']['severity'] = REQUIREMENT_ERROR;
      $requirements['devudo_shopmaster']['value'] = '<em>Unknown</em>';
    }
  }

  return $requirements;
}